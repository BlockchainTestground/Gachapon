{
  "contractName": "MyERC20",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/MyERC20.sol\":\"MyERC20\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/MyERC20.sol\":{\"keccak256\":\"0x686adc35d3f185542896f07d981cc80da7e71f838263ce9abcd6aae2a453e9ae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a3b1d952c1bfc4f00b4b0c00086d91aa140c79a9a771ec2046419d5c7b4f9b3f\",\"dweb:/ipfs/QmZGFuSuYd8PDRBMWbyuVShgVi37mndYF1NmumL91mBhFC\"]},\"project:/contracts/dependencies/Context.sol\":{\"keccak256\":\"0xba6ddba08488c0fd0249ecbf73d94db554b664e5460e05335633d38988fb1947\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8d39e2090185cd7852447d004adb908b40e2c7adc8831ee1a7d6eb6dea664ddc\",\"dweb:/ipfs/QmQZPEkHcJ8hbEbRr8vvUrCWPs7XRBmwLXbUQc9Mmx39Lx\"]},\"project:/contracts/dependencies/ERC20.sol\":{\"keccak256\":\"0xd45737acc019bce4c3cdbe344a50cd325cdda36fc2254fa8353cedb0e4bd84df\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0771c283c79cca8ba89706602ba901bbb9a72d687fa19547f1ea63951452afa9\",\"dweb:/ipfs/QmfBQ1P98fehwxyXjEjpin3PFtiHwEKhu56L7SLB8he91D\"]},\"project:/contracts/dependencies/IERC20.sol\":{\"keccak256\":\"0xa38ec4e151e4d397d05bdfb94e6e4eb91e57a9fca3bc1c655289a4adf31a58fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://312e850e36efbf0f2450896c213b23dc0a28150e051bcbf933a8b9211627c44b\",\"dweb:/ipfs/QmWsyisPjDwTJrTMhsGZa4JHiCS63mWfsyVQKbaijWGdmK\"]},\"project:/contracts/dependencies/IERC20Metadata.sol\":{\"keccak256\":\"0x4065401847859fdea8270079da0d5d94d4d6bcb16b83753f25d77c03bc9fa66d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ddc99a4763150db86205a0b0313dda9db3b4c1cc283933cb9228d63ea71a7495\",\"dweb:/ipfs/QmaVKXyFDwYPZ1iRrjAEbbaFYWSfrYdz4jfaeFJ7EWzT6k\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100cf5760003560e01c806342966c681161008c578063a0712d6811610066578063a0712d6814610228578063a457c2d714610244578063a9059cbb14610274578063dd62ed3e146102a4576100cf565b806342966c68146101be57806370a08231146101da57806395d89b411461020a576100cf565b806306fdde03146100d4578063095ea7b3146100f257806318160ddd1461012257806323b872dd14610140578063313ce56714610170578063395093511461018e575b600080fd5b6100dc6102d4565b6040516100e99190611286565b60405180910390f35b61010c6004803603810190610107919061103a565b610366565b604051610119919061126b565b60405180910390f35b61012a610384565b60405161013791906113e8565b60405180910390f35b61015a60048036038101906101559190610fe7565b61038e565b604051610167919061126b565b60405180910390f35b61017861048f565b6040516101859190611403565b60405180910390f35b6101a860048036038101906101a3919061103a565b610498565b6040516101b5919061126b565b60405180910390f35b6101d860048036038101906101d3919061107a565b610544565b005b6101f460048036038101906101ef9190610f7a565b610551565b60405161020191906113e8565b60405180910390f35b610212610599565b60405161021f9190611286565b60405180910390f35b610242600480360381019061023d919061107a565b61062b565b005b61025e6004803603810190610259919061103a565b610638565b60405161026b919061126b565b60405180910390f35b61028e6004803603810190610289919061103a565b61072c565b60405161029b919061126b565b60405180910390f35b6102be60048036038101906102b99190610fa7565b61074a565b6040516102cb91906113e8565b60405180910390f35b6060600380546102e39061154c565b80601f016020809104026020016040519081016040528092919081815260200182805461030f9061154c565b801561035c5780601f106103315761010080835404028352916020019161035c565b820191906000526020600020905b81548152906001019060200180831161033f57829003601f168201915b5050505050905090565b600061037a6103736107d1565b84846107d9565b6001905092915050565b6000600254905090565b600061039b8484846109a4565b6000600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006103e66107d1565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015610466576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161045d90611328565b60405180910390fd5b610483856104726107d1565b858461047e9190611490565b6107d9565b60019150509392505050565b60006012905090565b600061053a6104a56107d1565b8484600160006104b36107d1565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610535919061143a565b6107d9565b6001905092915050565b61054e3382610c23565b50565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600480546105a89061154c565b80601f01602080910402602001604051908101604052809291908181526020018280546105d49061154c565b80156106215780601f106105f657610100808354040283529160200191610621565b820191906000526020600020905b81548152906001019060200180831161060457829003601f168201915b5050505050905090565b6106353382610df7565b50565b600080600160006106476107d1565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015610704576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106fb906113a8565b60405180910390fd5b61072161070f6107d1565b85858461071c9190611490565b6107d9565b600191505092915050565b60006107406107396107d1565b84846109a4565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610849576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161084090611388565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156108b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108b0906112e8565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258360405161099791906113e8565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610a14576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a0b90611368565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610a84576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a7b906112a8565b60405180910390fd5b610a8f838383610f4b565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610b15576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b0c90611308565b60405180910390fd5b8181610b219190611490565b6000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610bb1919061143a565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610c1591906113e8565b60405180910390a350505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610c93576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c8a90611348565b60405180910390fd5b610c9f82600083610f4b565b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610d25576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d1c906112c8565b60405180910390fd5b8181610d319190611490565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508160026000828254610d859190611490565b92505081905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610dea91906113e8565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610e67576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e5e906113c8565b60405180910390fd5b610e7360008383610f4b565b8060026000828254610e85919061143a565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610eda919061143a565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610f3f91906113e8565b60405180910390a35050565b505050565b600081359050610f5f816118e2565b92915050565b600081359050610f74816118f9565b92915050565b600060208284031215610f9057610f8f6115dc565b5b6000610f9e84828501610f50565b91505092915050565b60008060408385031215610fbe57610fbd6115dc565b5b6000610fcc85828601610f50565b9250506020610fdd85828601610f50565b9150509250929050565b60008060006060848603121561100057610fff6115dc565b5b600061100e86828701610f50565b935050602061101f86828701610f50565b925050604061103086828701610f65565b9150509250925092565b60008060408385031215611051576110506115dc565b5b600061105f85828601610f50565b925050602061107085828601610f65565b9150509250929050565b6000602082840312156110905761108f6115dc565b5b600061109e84828501610f65565b91505092915050565b6110b0816114d6565b82525050565b60006110c18261141e565b6110cb8185611429565b93506110db818560208601611519565b6110e4816115e1565b840191505092915050565b60006110fc602383611429565b9150611107826115f2565b604082019050919050565b600061111f602283611429565b915061112a82611641565b604082019050919050565b6000611142602283611429565b915061114d82611690565b604082019050919050565b6000611165602683611429565b9150611170826116df565b604082019050919050565b6000611188602883611429565b91506111938261172e565b604082019050919050565b60006111ab602183611429565b91506111b68261177d565b604082019050919050565b60006111ce602583611429565b91506111d9826117cc565b604082019050919050565b60006111f1602483611429565b91506111fc8261181b565b604082019050919050565b6000611214602583611429565b915061121f8261186a565b604082019050919050565b6000611237601f83611429565b9150611242826118b9565b602082019050919050565b61125681611502565b82525050565b6112658161150c565b82525050565b600060208201905061128060008301846110a7565b92915050565b600060208201905081810360008301526112a081846110b6565b905092915050565b600060208201905081810360008301526112c1816110ef565b9050919050565b600060208201905081810360008301526112e181611112565b9050919050565b6000602082019050818103600083015261130181611135565b9050919050565b6000602082019050818103600083015261132181611158565b9050919050565b600060208201905081810360008301526113418161117b565b9050919050565b600060208201905081810360008301526113618161119e565b9050919050565b60006020820190508181036000830152611381816111c1565b9050919050565b600060208201905081810360008301526113a1816111e4565b9050919050565b600060208201905081810360008301526113c181611207565b9050919050565b600060208201905081810360008301526113e18161122a565b9050919050565b60006020820190506113fd600083018461124d565b92915050565b6000602082019050611418600083018461125c565b92915050565b600081519050919050565b600082825260208201905092915050565b600061144582611502565b915061145083611502565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156114855761148461157e565b5b828201905092915050565b600061149b82611502565b91506114a683611502565b9250828210156114b9576114b861157e565b5b828203905092915050565b60006114cf826114e2565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b8381101561153757808201518184015260208101905061151c565b83811115611546576000848401525b50505050565b6000600282049050600182168061156457607f821691505b60208210811415611578576115776115ad565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600080fd5b6000601f19601f8301169050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60008201527f6365000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206160008201527f6c6c6f77616e6365000000000000000000000000000000000000000000000000602082015250565b7f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360008201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b6118eb816114c4565b81146118f657600080fd5b50565b61190281611502565b811461190d57600080fd5b5056fea2646970667358221220746be84b495846ff73f260d464f4e301b88e9dfea2b05bb194896d8d987b6ccc64736f6c63430008060033",
  "sourceMap": "92:268:2:-:0;;;122:82;;;;;;;;;;1877:114:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1952:5;1944;:13;;;;;;;;;;;;:::i;:::-;;1977:7;1967;:17;;;;;;;;;;;;:::i;:::-;;1877:114;;170:29:2::1;176:10;188;170:5;;;:29;;:::i;:::-;92:268:::0;;8002:330:7;8104:1;8085:21;;:7;:21;;;;8077:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;8153:49;8182:1;8186:7;8195:6;8153:20;;;:49;;:::i;:::-;8229:6;8213:12;;:22;;;;;;;:::i;:::-;;;;;;;;8267:6;8245:9;:18;8255:7;8245:18;;;;;;;;;;;;;;;;:28;;;;;;;:::i;:::-;;;;;;;;8309:7;8288:37;;8305:1;8288:37;;;8318:6;8288:37;;;;;;:::i;:::-;;;;;;;;8002:330;;:::o;10485:92::-;;;;:::o;92:268:2:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:366:21:-;149:3;170:67;234:2;229:3;170:67;:::i;:::-;163:74;;246:93;335:3;246:93;:::i;:::-;364:2;359:3;355:12;348:19;;153:220;;;:::o;379:118::-;466:24;484:5;466:24;:::i;:::-;461:3;454:37;444:53;;:::o;503:419::-;669:4;707:2;696:9;692:18;684:26;;756:9;750:4;746:20;742:1;731:9;727:17;720:47;784:131;910:4;784:131;:::i;:::-;776:139;;674:248;;;:::o;928:222::-;1021:4;1059:2;1048:9;1044:18;1036:26;;1072:71;1140:1;1129:9;1125:17;1116:6;1072:71;:::i;:::-;1026:124;;;;:::o;1156:169::-;1240:11;1274:6;1269:3;1262:19;1314:4;1309:3;1305:14;1290:29;;1252:73;;;;:::o;1331:305::-;1371:3;1390:20;1408:1;1390:20;:::i;:::-;1385:25;;1424:20;1442:1;1424:20;:::i;:::-;1419:25;;1578:1;1510:66;1506:74;1503:1;1500:81;1497:2;;;1584:18;;:::i;:::-;1497:2;1628:1;1625;1621:9;1614:16;;1375:261;;;;:::o;1642:77::-;1679:7;1708:5;1697:16;;1687:32;;;:::o;1725:320::-;1769:6;1806:1;1800:4;1796:12;1786:22;;1853:1;1847:4;1843:12;1874:18;1864:2;;1930:4;1922:6;1918:17;1908:27;;1864:2;1992;1984:6;1981:14;1961:18;1958:38;1955:2;;;2011:18;;:::i;:::-;1955:2;1776:269;;;;:::o;2051:180::-;2099:77;2096:1;2089:88;2196:4;2193:1;2186:15;2220:4;2217:1;2210:15;2237:180;2285:77;2282:1;2275:88;2382:4;2379:1;2372:15;2406:4;2403:1;2396:15;2423:181;2563:33;2559:1;2551:6;2547:14;2540:57;2529:75;:::o;92:268:2:-;;;;;;;",
  "deployedSourceMap": "92:268:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2056:98:7;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4153:166;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3144:106;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4786:414;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2993:91;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5595:212;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;208:73:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3308:125:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2267:102;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;285:73:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6294:371:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3636:172;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3866:149;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2056:98;2110:13;2142:5;2135:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2056:98;:::o;4153:166::-;4236:4;4252:39;4261:12;:10;:12::i;:::-;4275:7;4284:6;4252:8;:39::i;:::-;4308:4;4301:11;;4153:166;;;;:::o;3144:106::-;3205:7;3231:12;;3224:19;;3144:106;:::o;4786:414::-;4892:4;4908:36;4918:6;4926:9;4937:6;4908:9;:36::i;:::-;4955:24;4982:11;:19;4994:6;4982:19;;;;;;;;;;;;;;;:33;5002:12;:10;:12::i;:::-;4982:33;;;;;;;;;;;;;;;;4955:60;;5053:6;5033:16;:26;;5025:79;;;;;;;;;;;;:::i;:::-;;;;;;;;;5114:57;5123:6;5131:12;:10;:12::i;:::-;5164:6;5145:16;:25;;;;:::i;:::-;5114:8;:57::i;:::-;5189:4;5182:11;;;4786:414;;;;;:::o;2993:91::-;3051:5;3075:2;3068:9;;2993:91;:::o;5595:212::-;5683:4;5699:80;5708:12;:10;:12::i;:::-;5722:7;5768:10;5731:11;:25;5743:12;:10;:12::i;:::-;5731:25;;;;;;;;;;;;;;;:34;5757:7;5731:34;;;;;;;;;;;;;;;;:47;;;;:::i;:::-;5699:8;:80::i;:::-;5796:4;5789:11;;5595:212;;;;:::o;208:73:2:-;251:25;257:10;269:6;251:5;:25::i;:::-;208:73;:::o;3308:125:7:-;3382:7;3408:9;:18;3418:7;3408:18;;;;;;;;;;;;;;;;3401:25;;3308:125;;;:::o;2267:102::-;2323:13;2355:7;2348:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2267:102;:::o;285:73:2:-;328:25;334:10;346:6;328:5;:25::i;:::-;285:73;:::o;6294:371:7:-;6387:4;6403:24;6430:11;:25;6442:12;:10;:12::i;:::-;6430:25;;;;;;;;;;;;;;;:34;6456:7;6430:34;;;;;;;;;;;;;;;;6403:61;;6502:15;6482:16;:35;;6474:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;6569:67;6578:12;:10;:12::i;:::-;6592:7;6620:15;6601:16;:34;;;;:::i;:::-;6569:8;:67::i;:::-;6654:4;6647:11;;;6294:371;;;;:::o;3636:172::-;3722:4;3738:42;3748:12;:10;:12::i;:::-;3762:9;3773:6;3738:9;:42::i;:::-;3797:4;3790:11;;3636:172;;;;:::o;3866:149::-;3955:7;3981:11;:18;3993:5;3981:18;;;;;;;;;;;;;;;:27;4000:7;3981:27;;;;;;;;;;;;;;;;3974:34;;3866:149;;;;:::o;586:96:5:-;639:7;665:10;658:17;;586:96;:::o;9558:340:7:-;9676:1;9659:19;;:5;:19;;;;9651:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;9756:1;9737:21;;:7;:21;;;;9729:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;9838:6;9808:11;:18;9820:5;9808:18;;;;;;;;;;;;;;;:27;9827:7;9808:27;;;;;;;;;;;;;;;:36;;;;9875:7;9859:32;;9868:5;9859:32;;;9884:6;9859:32;;;;;;:::i;:::-;;;;;;;;9558:340;;;:::o;7139:592::-;7262:1;7244:20;;:6;:20;;;;7236:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;7345:1;7324:23;;:9;:23;;;;7316:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;7398:47;7419:6;7427:9;7438:6;7398:20;:47::i;:::-;7456:21;7480:9;:17;7490:6;7480:17;;;;;;;;;;;;;;;;7456:41;;7532:6;7515:13;:23;;7507:74;;;;;;;;;;;;:::i;:::-;;;;;;;;;7627:6;7611:13;:22;;;;:::i;:::-;7591:9;:17;7601:6;7591:17;;;;;;;;;;;;;;;:42;;;;7667:6;7643:9;:20;7653:9;7643:20;;;;;;;;;;;;;;;;:30;;;;;;;:::i;:::-;;;;;;;;7706:9;7689:35;;7698:6;7689:35;;;7717:6;7689:35;;;;;;:::i;:::-;;;;;;;;7226:505;7139:592;;;:::o;8652:483::-;8754:1;8735:21;;:7;:21;;;;8727:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;8805:49;8826:7;8843:1;8847:6;8805:20;:49::i;:::-;8865:22;8890:9;:18;8900:7;8890:18;;;;;;;;;;;;;;;;8865:43;;8944:6;8926:14;:24;;8918:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;9037:6;9020:14;:23;;;;:::i;:::-;8999:9;:18;9009:7;8999:18;;;;;;;;;;;;;;;:44;;;;9069:6;9053:12;;:22;;;;;;;:::i;:::-;;;;;;;;9117:1;9091:37;;9100:7;9091:37;;;9121:6;9091:37;;;;;;:::i;:::-;;;;;;;;8717:418;8652:483;;:::o;8002:330::-;8104:1;8085:21;;:7;:21;;;;8077:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;8153:49;8182:1;8186:7;8195:6;8153:20;:49::i;:::-;8229:6;8213:12;;:22;;;;;;;:::i;:::-;;;;;;;;8267:6;8245:9;:18;8255:7;8245:18;;;;;;;;;;;;;;;;:28;;;;;;;:::i;:::-;;;;;;;;8309:7;8288:37;;8305:1;8288:37;;;8318:6;8288:37;;;;;;:::i;:::-;;;;;;;;8002:330;;:::o;10485:92::-;;;;:::o;7:139:21:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:139::-;198:5;236:6;223:20;214:29;;252:33;279:5;252:33;:::i;:::-;204:87;;;;:::o;297:329::-;356:6;405:2;393:9;384:7;380:23;376:32;373:2;;;411:79;;:::i;:::-;373:2;531:1;556:53;601:7;592:6;581:9;577:22;556:53;:::i;:::-;546:63;;502:117;363:263;;;;:::o;632:474::-;700:6;708;757:2;745:9;736:7;732:23;728:32;725:2;;;763:79;;:::i;:::-;725:2;883:1;908:53;953:7;944:6;933:9;929:22;908:53;:::i;:::-;898:63;;854:117;1010:2;1036:53;1081:7;1072:6;1061:9;1057:22;1036:53;:::i;:::-;1026:63;;981:118;715:391;;;;;:::o;1112:619::-;1189:6;1197;1205;1254:2;1242:9;1233:7;1229:23;1225:32;1222:2;;;1260:79;;:::i;:::-;1222:2;1380:1;1405:53;1450:7;1441:6;1430:9;1426:22;1405:53;:::i;:::-;1395:63;;1351:117;1507:2;1533:53;1578:7;1569:6;1558:9;1554:22;1533:53;:::i;:::-;1523:63;;1478:118;1635:2;1661:53;1706:7;1697:6;1686:9;1682:22;1661:53;:::i;:::-;1651:63;;1606:118;1212:519;;;;;:::o;1737:474::-;1805:6;1813;1862:2;1850:9;1841:7;1837:23;1833:32;1830:2;;;1868:79;;:::i;:::-;1830:2;1988:1;2013:53;2058:7;2049:6;2038:9;2034:22;2013:53;:::i;:::-;2003:63;;1959:117;2115:2;2141:53;2186:7;2177:6;2166:9;2162:22;2141:53;:::i;:::-;2131:63;;2086:118;1820:391;;;;;:::o;2217:329::-;2276:6;2325:2;2313:9;2304:7;2300:23;2296:32;2293:2;;;2331:79;;:::i;:::-;2293:2;2451:1;2476:53;2521:7;2512:6;2501:9;2497:22;2476:53;:::i;:::-;2466:63;;2422:117;2283:263;;;;:::o;2552:109::-;2633:21;2648:5;2633:21;:::i;:::-;2628:3;2621:34;2611:50;;:::o;2667:364::-;2755:3;2783:39;2816:5;2783:39;:::i;:::-;2838:71;2902:6;2897:3;2838:71;:::i;:::-;2831:78;;2918:52;2963:6;2958:3;2951:4;2944:5;2940:16;2918:52;:::i;:::-;2995:29;3017:6;2995:29;:::i;:::-;2990:3;2986:39;2979:46;;2759:272;;;;;:::o;3037:366::-;3179:3;3200:67;3264:2;3259:3;3200:67;:::i;:::-;3193:74;;3276:93;3365:3;3276:93;:::i;:::-;3394:2;3389:3;3385:12;3378:19;;3183:220;;;:::o;3409:366::-;3551:3;3572:67;3636:2;3631:3;3572:67;:::i;:::-;3565:74;;3648:93;3737:3;3648:93;:::i;:::-;3766:2;3761:3;3757:12;3750:19;;3555:220;;;:::o;3781:366::-;3923:3;3944:67;4008:2;4003:3;3944:67;:::i;:::-;3937:74;;4020:93;4109:3;4020:93;:::i;:::-;4138:2;4133:3;4129:12;4122:19;;3927:220;;;:::o;4153:366::-;4295:3;4316:67;4380:2;4375:3;4316:67;:::i;:::-;4309:74;;4392:93;4481:3;4392:93;:::i;:::-;4510:2;4505:3;4501:12;4494:19;;4299:220;;;:::o;4525:366::-;4667:3;4688:67;4752:2;4747:3;4688:67;:::i;:::-;4681:74;;4764:93;4853:3;4764:93;:::i;:::-;4882:2;4877:3;4873:12;4866:19;;4671:220;;;:::o;4897:366::-;5039:3;5060:67;5124:2;5119:3;5060:67;:::i;:::-;5053:74;;5136:93;5225:3;5136:93;:::i;:::-;5254:2;5249:3;5245:12;5238:19;;5043:220;;;:::o;5269:366::-;5411:3;5432:67;5496:2;5491:3;5432:67;:::i;:::-;5425:74;;5508:93;5597:3;5508:93;:::i;:::-;5626:2;5621:3;5617:12;5610:19;;5415:220;;;:::o;5641:366::-;5783:3;5804:67;5868:2;5863:3;5804:67;:::i;:::-;5797:74;;5880:93;5969:3;5880:93;:::i;:::-;5998:2;5993:3;5989:12;5982:19;;5787:220;;;:::o;6013:366::-;6155:3;6176:67;6240:2;6235:3;6176:67;:::i;:::-;6169:74;;6252:93;6341:3;6252:93;:::i;:::-;6370:2;6365:3;6361:12;6354:19;;6159:220;;;:::o;6385:366::-;6527:3;6548:67;6612:2;6607:3;6548:67;:::i;:::-;6541:74;;6624:93;6713:3;6624:93;:::i;:::-;6742:2;6737:3;6733:12;6726:19;;6531:220;;;:::o;6757:118::-;6844:24;6862:5;6844:24;:::i;:::-;6839:3;6832:37;6822:53;;:::o;6881:112::-;6964:22;6980:5;6964:22;:::i;:::-;6959:3;6952:35;6942:51;;:::o;6999:210::-;7086:4;7124:2;7113:9;7109:18;7101:26;;7137:65;7199:1;7188:9;7184:17;7175:6;7137:65;:::i;:::-;7091:118;;;;:::o;7215:313::-;7328:4;7366:2;7355:9;7351:18;7343:26;;7415:9;7409:4;7405:20;7401:1;7390:9;7386:17;7379:47;7443:78;7516:4;7507:6;7443:78;:::i;:::-;7435:86;;7333:195;;;;:::o;7534:419::-;7700:4;7738:2;7727:9;7723:18;7715:26;;7787:9;7781:4;7777:20;7773:1;7762:9;7758:17;7751:47;7815:131;7941:4;7815:131;:::i;:::-;7807:139;;7705:248;;;:::o;7959:419::-;8125:4;8163:2;8152:9;8148:18;8140:26;;8212:9;8206:4;8202:20;8198:1;8187:9;8183:17;8176:47;8240:131;8366:4;8240:131;:::i;:::-;8232:139;;8130:248;;;:::o;8384:419::-;8550:4;8588:2;8577:9;8573:18;8565:26;;8637:9;8631:4;8627:20;8623:1;8612:9;8608:17;8601:47;8665:131;8791:4;8665:131;:::i;:::-;8657:139;;8555:248;;;:::o;8809:419::-;8975:4;9013:2;9002:9;8998:18;8990:26;;9062:9;9056:4;9052:20;9048:1;9037:9;9033:17;9026:47;9090:131;9216:4;9090:131;:::i;:::-;9082:139;;8980:248;;;:::o;9234:419::-;9400:4;9438:2;9427:9;9423:18;9415:26;;9487:9;9481:4;9477:20;9473:1;9462:9;9458:17;9451:47;9515:131;9641:4;9515:131;:::i;:::-;9507:139;;9405:248;;;:::o;9659:419::-;9825:4;9863:2;9852:9;9848:18;9840:26;;9912:9;9906:4;9902:20;9898:1;9887:9;9883:17;9876:47;9940:131;10066:4;9940:131;:::i;:::-;9932:139;;9830:248;;;:::o;10084:419::-;10250:4;10288:2;10277:9;10273:18;10265:26;;10337:9;10331:4;10327:20;10323:1;10312:9;10308:17;10301:47;10365:131;10491:4;10365:131;:::i;:::-;10357:139;;10255:248;;;:::o;10509:419::-;10675:4;10713:2;10702:9;10698:18;10690:26;;10762:9;10756:4;10752:20;10748:1;10737:9;10733:17;10726:47;10790:131;10916:4;10790:131;:::i;:::-;10782:139;;10680:248;;;:::o;10934:419::-;11100:4;11138:2;11127:9;11123:18;11115:26;;11187:9;11181:4;11177:20;11173:1;11162:9;11158:17;11151:47;11215:131;11341:4;11215:131;:::i;:::-;11207:139;;11105:248;;;:::o;11359:419::-;11525:4;11563:2;11552:9;11548:18;11540:26;;11612:9;11606:4;11602:20;11598:1;11587:9;11583:17;11576:47;11640:131;11766:4;11640:131;:::i;:::-;11632:139;;11530:248;;;:::o;11784:222::-;11877:4;11915:2;11904:9;11900:18;11892:26;;11928:71;11996:1;11985:9;11981:17;11972:6;11928:71;:::i;:::-;11882:124;;;;:::o;12012:214::-;12101:4;12139:2;12128:9;12124:18;12116:26;;12152:67;12216:1;12205:9;12201:17;12192:6;12152:67;:::i;:::-;12106:120;;;;:::o;12313:99::-;12365:6;12399:5;12393:12;12383:22;;12372:40;;;:::o;12418:169::-;12502:11;12536:6;12531:3;12524:19;12576:4;12571:3;12567:14;12552:29;;12514:73;;;;:::o;12593:305::-;12633:3;12652:20;12670:1;12652:20;:::i;:::-;12647:25;;12686:20;12704:1;12686:20;:::i;:::-;12681:25;;12840:1;12772:66;12768:74;12765:1;12762:81;12759:2;;;12846:18;;:::i;:::-;12759:2;12890:1;12887;12883:9;12876:16;;12637:261;;;;:::o;12904:191::-;12944:4;12964:20;12982:1;12964:20;:::i;:::-;12959:25;;12998:20;13016:1;12998:20;:::i;:::-;12993:25;;13037:1;13034;13031:8;13028:2;;;13042:18;;:::i;:::-;13028:2;13087:1;13084;13080:9;13072:17;;12949:146;;;;:::o;13101:96::-;13138:7;13167:24;13185:5;13167:24;:::i;:::-;13156:35;;13146:51;;;:::o;13203:90::-;13237:7;13280:5;13273:13;13266:21;13255:32;;13245:48;;;:::o;13299:126::-;13336:7;13376:42;13369:5;13365:54;13354:65;;13344:81;;;:::o;13431:77::-;13468:7;13497:5;13486:16;;13476:32;;;:::o;13514:86::-;13549:7;13589:4;13582:5;13578:16;13567:27;;13557:43;;;:::o;13606:307::-;13674:1;13684:113;13698:6;13695:1;13692:13;13684:113;;;13783:1;13778:3;13774:11;13768:18;13764:1;13759:3;13755:11;13748:39;13720:2;13717:1;13713:10;13708:15;;13684:113;;;13815:6;13812:1;13809:13;13806:2;;;13895:1;13886:6;13881:3;13877:16;13870:27;13806:2;13655:258;;;;:::o;13919:320::-;13963:6;14000:1;13994:4;13990:12;13980:22;;14047:1;14041:4;14037:12;14068:18;14058:2;;14124:4;14116:6;14112:17;14102:27;;14058:2;14186;14178:6;14175:14;14155:18;14152:38;14149:2;;;14205:18;;:::i;:::-;14149:2;13970:269;;;;:::o;14245:180::-;14293:77;14290:1;14283:88;14390:4;14387:1;14380:15;14414:4;14411:1;14404:15;14431:180;14479:77;14476:1;14469:88;14576:4;14573:1;14566:15;14600:4;14597:1;14590:15;14740:117;14849:1;14846;14839:12;14863:102;14904:6;14955:2;14951:7;14946:2;14939:5;14935:14;14931:28;14921:38;;14911:54;;;:::o;14971:222::-;15111:34;15107:1;15099:6;15095:14;15088:58;15180:5;15175:2;15167:6;15163:15;15156:30;15077:116;:::o;15199:221::-;15339:34;15335:1;15327:6;15323:14;15316:58;15408:4;15403:2;15395:6;15391:15;15384:29;15305:115;:::o;15426:221::-;15566:34;15562:1;15554:6;15550:14;15543:58;15635:4;15630:2;15622:6;15618:15;15611:29;15532:115;:::o;15653:225::-;15793:34;15789:1;15781:6;15777:14;15770:58;15862:8;15857:2;15849:6;15845:15;15838:33;15759:119;:::o;15884:227::-;16024:34;16020:1;16012:6;16008:14;16001:58;16093:10;16088:2;16080:6;16076:15;16069:35;15990:121;:::o;16117:220::-;16257:34;16253:1;16245:6;16241:14;16234:58;16326:3;16321:2;16313:6;16309:15;16302:28;16223:114;:::o;16343:224::-;16483:34;16479:1;16471:6;16467:14;16460:58;16552:7;16547:2;16539:6;16535:15;16528:32;16449:118;:::o;16573:223::-;16713:34;16709:1;16701:6;16697:14;16690:58;16782:6;16777:2;16769:6;16765:15;16758:31;16679:117;:::o;16802:224::-;16942:34;16938:1;16930:6;16926:14;16919:58;17011:7;17006:2;16998:6;16994:15;16987:32;16908:118;:::o;17032:181::-;17172:33;17168:1;17160:6;17156:14;17149:57;17138:75;:::o;17219:122::-;17292:24;17310:5;17292:24;:::i;:::-;17285:5;17282:35;17272:2;;17331:1;17328;17321:12;17272:2;17262:79;:::o;17347:122::-;17420:24;17438:5;17420:24;:::i;:::-;17413:5;17410:35;17400:2;;17459:1;17456;17449:12;17400:2;17390:79;:::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.6;\n\nimport \"./dependencies/ERC20.sol\";\n\ncontract MyERC20 is ERC20 {\n  constructor () ERC20(\"My Token\", \"TKN10\") {\n    _mint(msg.sender, 1000 ether);\n  }\n\n  function burn(uint256 amount) public {\n    _burn(msg.sender, amount);\n  }\n\n  function mint(uint256 amount) public {\n    _mint(msg.sender, amount);\n  }\n}",
  "sourcePath": "/home/turupawn/Projects/Cryptobrawl/contracts/MyERC20.sol",
  "ast": {
    "absolutePath": "project:/contracts/MyERC20.sol",
    "exportedSymbols": {
      "Context": [
        830
      ],
      "ERC20": [
        1361
      ],
      "IERC20": [
        2605
      ],
      "IERC20Metadata": [
        2630
      ],
      "MyERC20": [
        419
      ]
    },
    "id": 420,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 377,
        "literals": [
          "solidity",
          "0.8",
          ".6"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:22:2"
      },
      {
        "absolutePath": "project:/contracts/dependencies/ERC20.sol",
        "file": "./dependencies/ERC20.sol",
        "id": 378,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 420,
        "sourceUnit": 1362,
        "src": "56:34:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 379,
              "name": "ERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1361,
              "src": "112:5:2"
            },
            "id": 380,
            "nodeType": "InheritanceSpecifier",
            "src": "112:5:2"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 419,
        "linearizedBaseContracts": [
          419,
          1361,
          2630,
          2605,
          830
        ],
        "name": "MyERC20",
        "nameLocation": "101:7:2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 393,
              "nodeType": "Block",
              "src": "164:40:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 388,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "176:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 389,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "176:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31303030",
                        "id": 390,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "188:10:2",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        },
                        "value": "1000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        }
                      ],
                      "id": 387,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1242,
                      "src": "170:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 391,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "170:29:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 392,
                  "nodeType": "ExpressionStatement",
                  "src": "170:29:2"
                }
              ]
            },
            "id": 394,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "4d7920546f6b656e",
                    "id": 383,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "143:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_510a6307a741df89ca01520d55119bedc02a7ba970667eb27bea92c21fc07e6d",
                      "typeString": "literal_string \"My Token\""
                    },
                    "value": "My Token"
                  },
                  {
                    "hexValue": "544b4e3130",
                    "id": 384,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "155:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_b288bd8e83a0f4d56862567bb297793bcda362d68daafd293acec8b7ecf8c005",
                      "typeString": "literal_string \"TKN10\""
                    },
                    "value": "TKN10"
                  }
                ],
                "id": 385,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 382,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1361,
                  "src": "137:5:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "137:26:2"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 381,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "134:2:2"
            },
            "returnParameters": {
              "id": 386,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "164:0:2"
            },
            "scope": 419,
            "src": "122:82:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 405,
              "nodeType": "Block",
              "src": "245:36:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 400,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "257:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 401,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "257:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 402,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 396,
                        "src": "269:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 399,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1304,
                      "src": "251:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 403,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "251:25:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 404,
                  "nodeType": "ExpressionStatement",
                  "src": "251:25:2"
                }
              ]
            },
            "functionSelector": "42966c68",
            "id": 406,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nameLocation": "217:4:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 397,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 396,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "230:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 406,
                  "src": "222:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 395,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "222:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "221:16:2"
            },
            "returnParameters": {
              "id": 398,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "245:0:2"
            },
            "scope": 419,
            "src": "208:73:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 417,
              "nodeType": "Block",
              "src": "322:36:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 412,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "334:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 413,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "334:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 414,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 408,
                        "src": "346:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 411,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1242,
                      "src": "328:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 415,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "328:25:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 416,
                  "nodeType": "ExpressionStatement",
                  "src": "328:25:2"
                }
              ]
            },
            "functionSelector": "a0712d68",
            "id": 418,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nameLocation": "294:4:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 409,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 408,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "307:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 418,
                  "src": "299:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 407,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "299:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "298:16:2"
            },
            "returnParameters": {
              "id": 410,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "322:0:2"
            },
            "scope": 419,
            "src": "285:73:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 420,
        "src": "92:268:2",
        "usedErrors": []
      }
    ],
    "src": "32:328:2"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/MyERC20.sol",
    "exportedSymbols": {
      "Context": [
        830
      ],
      "ERC20": [
        1361
      ],
      "IERC20": [
        2605
      ],
      "IERC20Metadata": [
        2630
      ],
      "MyERC20": [
        419
      ]
    },
    "id": 420,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 377,
        "literals": [
          "solidity",
          "0.8",
          ".6"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:22:2"
      },
      {
        "absolutePath": "project:/contracts/dependencies/ERC20.sol",
        "file": "./dependencies/ERC20.sol",
        "id": 378,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 420,
        "sourceUnit": 1362,
        "src": "56:34:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 379,
              "name": "ERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1361,
              "src": "112:5:2"
            },
            "id": 380,
            "nodeType": "InheritanceSpecifier",
            "src": "112:5:2"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 419,
        "linearizedBaseContracts": [
          419,
          1361,
          2630,
          2605,
          830
        ],
        "name": "MyERC20",
        "nameLocation": "101:7:2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 393,
              "nodeType": "Block",
              "src": "164:40:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 388,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "176:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 389,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "176:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31303030",
                        "id": 390,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "188:10:2",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        },
                        "value": "1000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        }
                      ],
                      "id": 387,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1242,
                      "src": "170:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 391,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "170:29:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 392,
                  "nodeType": "ExpressionStatement",
                  "src": "170:29:2"
                }
              ]
            },
            "id": 394,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "4d7920546f6b656e",
                    "id": 383,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "143:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_510a6307a741df89ca01520d55119bedc02a7ba970667eb27bea92c21fc07e6d",
                      "typeString": "literal_string \"My Token\""
                    },
                    "value": "My Token"
                  },
                  {
                    "hexValue": "544b4e3130",
                    "id": 384,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "155:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_b288bd8e83a0f4d56862567bb297793bcda362d68daafd293acec8b7ecf8c005",
                      "typeString": "literal_string \"TKN10\""
                    },
                    "value": "TKN10"
                  }
                ],
                "id": 385,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 382,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1361,
                  "src": "137:5:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "137:26:2"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 381,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "134:2:2"
            },
            "returnParameters": {
              "id": 386,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "164:0:2"
            },
            "scope": 419,
            "src": "122:82:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 405,
              "nodeType": "Block",
              "src": "245:36:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 400,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "257:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 401,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "257:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 402,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 396,
                        "src": "269:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 399,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1304,
                      "src": "251:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 403,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "251:25:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 404,
                  "nodeType": "ExpressionStatement",
                  "src": "251:25:2"
                }
              ]
            },
            "functionSelector": "42966c68",
            "id": 406,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nameLocation": "217:4:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 397,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 396,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "230:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 406,
                  "src": "222:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 395,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "222:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "221:16:2"
            },
            "returnParameters": {
              "id": 398,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "245:0:2"
            },
            "scope": 419,
            "src": "208:73:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 417,
              "nodeType": "Block",
              "src": "322:36:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 412,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "334:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 413,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "334:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 414,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 408,
                        "src": "346:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 411,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1242,
                      "src": "328:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 415,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "328:25:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 416,
                  "nodeType": "ExpressionStatement",
                  "src": "328:25:2"
                }
              ]
            },
            "functionSelector": "a0712d68",
            "id": 418,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nameLocation": "294:4:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 409,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 408,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "307:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 418,
                  "src": "299:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 407,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "299:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "298:16:2"
            },
            "returnParameters": {
              "id": 410,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "322:0:2"
            },
            "scope": 419,
            "src": "285:73:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 420,
        "src": "92:268:2",
        "usedErrors": []
      }
    ],
    "src": "32:328:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.6+commit.11564f7e.Emscripten.clang"
  },
  "networks": {
    "4": {
      "events": {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x6ab0bd23Aaf0529483b879B75476940815AB6392",
      "transactionHash": "0x325200d32a85f48ca1848dc10893ffa18ed60a5774a00fd427bf5c76f75df607"
    }
  },
  "schemaVersion": "3.0.23",
  "updatedAt": "2021-07-29T08:06:05.469Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}